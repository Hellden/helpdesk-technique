@model TT_MVC.Models.Model_Ticket_Attente

@{
	Layout = null;
}

<link href="~/Content/Site.css" rel="stylesheet" type="text/css" media="screen" />


<div class="modal-header">
	<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
	<h4 class="modal-title">Suivie</h4>
</div>

<div class="modal-body" style="width:100%">
	@using ( Html.BeginForm() )
	{
		<div class="form-horizontal">
			<div class="form-group">
				<div class="col-md-10">
					@Html.TextAreaFor(model => model.Suivie, htmlAttributes: new { rows = "10", @cols = "80", @id = "editor1" })
					@Html.ValidationMessageFor(model => model.Suivie, "", new { @class = "text-danger" })
				</div>
			</div>
			@Html.HiddenFor(model => model.Id, htmlAttributes: new { @id = "idTicketHidden" })
</div>
			<div class="modal-footer">
				<button class="btn btn-primary" type="submit"><i class="icon icon-check icon-lg"></i> Enregistrer</button>
				<button class="btn btn-inverse" type="submit" data-dismiss="modal"><i class="icon icon-times icon-lg"></i> Fermer</button>
			</div>
	}

</div>


<script src="~/Scripts/ckeditor/ckeditor.js"></script>
	<script>
		//Appel du texte enrichi ckeditor
	edit = CKEDITOR.replace('editor1', {
		language: 'fr'
	});

		//On récupére le contenu de la base de donnée du ckeditor et on l'affiche dans le modal bootstrap
	CKEDITOR.instances.editor1.setData($("#editor1").val());

	$("#submit").click(function () {
		$('#editor1').attr('value', CKEDITOR.instances.editor1.getData());
	})

		//Rechargement de la fenêtre parent quand la modal ce ferme. Permet de réactualiser l'id de sélection.
	$('#myModal').on('hidden.bs.modal', function () {
		window.location.reload(true);
	});
</script>