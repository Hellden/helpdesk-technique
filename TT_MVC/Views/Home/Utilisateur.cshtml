@model TT_MVC.Models.UtilisteurViewModel

@{
	ViewBag.Title = "Utilisateur";
}

<h2>Utilisateur</h2>




@using GridMvc.Html

@using ( Html.BeginForm() )
{
	<div class="form-horizontal">

		<hr />
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		<div class="form-group">
			@Html.LabelFor(model => model.Login, htmlAttributes: new { @class = "control-label col-md-offset-2 col-md-2" })
			<div class="col-md-4">
				@Html.EditorFor(model => model.Login, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Login, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Mdp, htmlAttributes: new { @class = "control-label col-md-offset-2 col-md-2" })
			<div class="col-md-4">
				@Html.EditorFor(model => model.Mdp, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Mdp, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.DroitUtilisateur, htmlAttributes: new { @class = "control-label col-md-offset-2 col-md-2" })
			<div class="col-md-4">
		        @Html.DropDownListFor(model => model.DroitUtilisateur, (SelectList)ViewBag.user, htmlAttributes: new { @style = "overflow-y:hidden", @class = "form-control"})
			</div>
		</div>

		<div class="form-group">
			<div class="col-md-offset-5 col-md-10">
				<button type="submit" class="btn btn-primary alert" id="valid">
					<span class="glyphicon glyphicon-ok">
						Enregistré
					</span>
				</button>
			</div>
		</div>
	</div>
}

@*Message de Validation*@
@if ( Request.Params["confirmUtilisateur"] == "ok" )
{
	<div class="alert alert-success">
		<strong>L'utilisateur à bien été crée.</strong>
	</div>
}


@Html.Grid((SelectList)ViewBag.Liste).SetLanguage("fr").EmptyText("Aucun utilisateur").Columns(columns =>
{
	columns.Add(p => p.Value).Titled("Login");
	columns.Add(p => p.Text).Titled("Droit");

}).WithPaging(20)